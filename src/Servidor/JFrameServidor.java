/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Servidor;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author crafa
 */
public class JFrameServidor extends javax.swing.JFrame {
    private CtrlServidor controlador;
    private String puerto;

    /**
     * Creates new form JFrameServidor
     */
    public JFrameServidor() {
        initComponents();
        
        try{
            puerto = JOptionPane.showInputDialog("Introduzca el puerto: ");
            // Controlamos que el campo que llega no esté vacio.
            while(puerto.isEmpty()){
                puerto = JOptionPane.showInputDialog("Introduzca el puerto: ");
            }
            // Controlamos que el campo que llega solo contenga números.
            while(!puerto.matches("^[0-9]*$")) {
                puerto = JOptionPane.showInputDialog("Introduzca un puerto válido: ");
            }

            controlador = new CtrlServidor(this);

            // Inhabilitamos los controles.
            jTextFieldRuta.setEnabled(false);
            jTextFieldRuta.setEditable(false);
            jButtonSubir.setEnabled(false);
            jTextAreaInfo.setEditable(false);
            
            controlador.seleccionArchivoPincipal();
        } catch(NullPointerException npe){
            // salimos del sistema
            System.exit(0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelSubir = new javax.swing.JPanel();
        jTextFieldRuta = new javax.swing.JTextField();
        jButtonSubir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaInfo = new javax.swing.JTextArea();
        jButtonOtroArchivo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanelSubir.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jButtonSubir.setText("Subir Archivo");
        jButtonSubir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubirActionPerformed(evt);
            }
        });

        jTextAreaInfo.setColumns(20);
        jTextAreaInfo.setRows(5);
        jScrollPane1.setViewportView(jTextAreaInfo);

        javax.swing.GroupLayout jPanelSubirLayout = new javax.swing.GroupLayout(jPanelSubir);
        jPanelSubir.setLayout(jPanelSubirLayout);
        jPanelSubirLayout.setHorizontalGroup(
            jPanelSubirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubirLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelSubirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addComponent(jTextFieldRuta)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelSubirLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonSubir)))
                .addContainerGap())
        );
        jPanelSubirLayout.setVerticalGroup(
            jPanelSubirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelSubirLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextFieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonSubir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButtonOtroArchivo.setText("Subir otro archivo");
        jButtonOtroArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOtroArchivoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelSubir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonOtroArchivo)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jButtonOtroArchivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanelSubir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSubirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubirActionPerformed
        
        controlador.enviaFichero(puerto);
        
    }//GEN-LAST:event_jButtonSubirActionPerformed

    private void jButtonOtroArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOtroArchivoActionPerformed

       controlador.seleccionArchivo();
        
    }//GEN-LAST:event_jButtonOtroArchivoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameServidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOtroArchivo;
    private javax.swing.JButton jButtonSubir;
    private javax.swing.JPanel jPanelSubir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaInfo;
    private javax.swing.JTextField jTextFieldRuta;
    // End of variables declaration//GEN-END:variables

    public void setTexToArea(String cad) {
        jTextAreaInfo.append(cad + "\n");
    }
    
    public void msgAdressUse() {
        JOptionPane.showMessageDialog(this, "La dirección ya esta en uso actualmente, el programa se cerrará.", "Error de dirección", JOptionPane.ERROR_MESSAGE);
        System.exit(0);
    }
    
    public File lanzaChooserPrincipal() {
        JOptionPane.showMessageDialog(this, "Seleccione el fichero que desea subir.");
        
        File fichero;
        JFileChooser fc = new JFileChooser();
        int seleccion = fc.showOpenDialog(this);

        if(seleccion == JFileChooser.APPROVE_OPTION){
            fichero = fc.getSelectedFile();
            if (fichero.canRead()) {
                jTextFieldRuta.setEnabled(true);
                jButtonSubir.setEnabled(true);
                jTextFieldRuta.setText(fichero.getAbsolutePath());    
                
                JOptionPane.showMessageDialog(this, "Pulse 'Subir archivo' para iniciar el servidor");
                
                return fichero;
            }
        } else {
            int option = JOptionPane.showConfirmDialog(this, "Se cerrá el programa, ¿seguro que desea salir?", "Cierre de programa", JOptionPane.YES_NO_OPTION);
            
            if(option == JOptionPane.YES_OPTION){
               System.exit(0); 
            } else {
                controlador.seleccionArchivo();
            }    
        }
        
        return null;
    }
    
    public File lanzaChooser() {        
        File fichero;
        JFileChooser fc = new JFileChooser();
        int seleccion = fc.showOpenDialog(this);

        if(seleccion == JFileChooser.APPROVE_OPTION){
            fichero = fc.getSelectedFile();
            if (fichero.canRead()) {
                jTextFieldRuta.setEnabled(true);
                jButtonSubir.setEnabled(true);
                jTextFieldRuta.setText(fichero.getAbsolutePath());    
                
                JOptionPane.showMessageDialog(this, "Pulse 'Subir archivo' para iniciar el servidor");
                
                return fichero;
            }
        }
        
        return null;
    }

}
